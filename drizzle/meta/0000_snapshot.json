{
  "id": "a6485c05-61d8-486c-a605-c8665ae655bc",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.answer-quest_answers": {
      "name": "answer-quest_answers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "answered_by": {
          "name": "answered_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "answered_by_idx": {
          "name": "answered_by_idx",
          "columns": [
            {
              "expression": "answered_by",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "question_id_idx": {
          "name": "question_id_idx",
          "columns": [
            {
              "expression": "question_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "answer-quest_answers_answered_by_answer-quest_users_id_fk": {
          "name": "answer-quest_answers_answered_by_answer-quest_users_id_fk",
          "tableFrom": "answer-quest_answers",
          "tableTo": "answer-quest_users",
          "columnsFrom": [
            "answered_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "answer-quest_answers_question_id_answer-quest_questions_id_fk": {
          "name": "answer-quest_answers_question_id_answer-quest_questions_id_fk",
          "tableFrom": "answer-quest_answers",
          "tableTo": "answer-quest_questions",
          "columnsFrom": [
            "question_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.answer-quest_logs": {
      "name": "answer-quest_logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "answered_question_id": {
          "name": "answered_question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_answer_id": {
          "name": "created_answer_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_question_id": {
          "name": "created_question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "creator_response": {
          "name": "creator_response",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "user_id_idx": {
          "name": "user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "answered_question_id_idx": {
          "name": "answered_question_id_idx",
          "columns": [
            {
              "expression": "answered_question_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "created_answer_id_idx": {
          "name": "created_answer_id_idx",
          "columns": [
            {
              "expression": "created_answer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "created_question_id_idx": {
          "name": "created_question_id_idx",
          "columns": [
            {
              "expression": "created_question_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "answer-quest_logs_user_id_answer-quest_users_id_fk": {
          "name": "answer-quest_logs_user_id_answer-quest_users_id_fk",
          "tableFrom": "answer-quest_logs",
          "tableTo": "answer-quest_users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "answer-quest_logs_answered_question_id_answer-quest_questions_id_fk": {
          "name": "answer-quest_logs_answered_question_id_answer-quest_questions_id_fk",
          "tableFrom": "answer-quest_logs",
          "tableTo": "answer-quest_questions",
          "columnsFrom": [
            "answered_question_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "answer-quest_logs_created_answer_id_answer-quest_answers_id_fk": {
          "name": "answer-quest_logs_created_answer_id_answer-quest_answers_id_fk",
          "tableFrom": "answer-quest_logs",
          "tableTo": "answer-quest_answers",
          "columnsFrom": [
            "created_answer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "answer-quest_logs_created_question_id_answer-quest_questions_id_fk": {
          "name": "answer-quest_logs_created_question_id_answer-quest_questions_id_fk",
          "tableFrom": "answer-quest_logs",
          "tableTo": "answer-quest_questions",
          "columnsFrom": [
            "created_question_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.answer-quest_questions": {
      "name": "answer-quest_questions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "asked_by": {
          "name": "asked_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "asked_by_idx": {
          "name": "asked_by_idx",
          "columns": [
            {
              "expression": "asked_by",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "answer-quest_questions_asked_by_answer-quest_users_id_fk": {
          "name": "answer-quest_questions_asked_by_answer-quest_users_id_fk",
          "tableFrom": "answer-quest_questions",
          "tableTo": "answer-quest_users",
          "columnsFrom": [
            "asked_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.answer-quest_users": {
      "name": "answer-quest_users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "email_idx": {
          "name": "email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "answer-quest_users_email_unique": {
          "name": "answer-quest_users_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      }
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}